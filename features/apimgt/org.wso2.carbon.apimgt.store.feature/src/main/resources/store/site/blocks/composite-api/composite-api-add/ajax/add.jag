<%
include("/jagg/jagg.jag");
var log = new Log();

function loadSwaggerObj(path)
{
    var obj, file = new File(path);
    if(file.isExists()){
        obj = require(path);
    } else {
        obj = require("/site/blocks/composite-api/composite-api-add/ajax/default_swagger.json");
    }
    return obj;
}

function isPositiveInteger(s) {
    return !!s.match(/^[0-9]+$/);
}

(function () {
    response.contentType = "text/plain; charset=UTF-8";
    response.addHeader('Cache-Control','no-cache, no-store, must-revalidate'); // HTTP 1.1.
    response.addHeader('Pragma','no-cache'); // HTTP 1.0.
    response.addHeader('Expires','0');
    var mod, obj, result, username,
	action = request.getParameter("action"),
    site = require("/site/conf/site.json"),
    msg = require("/site/conf/ui-messages.jag");

    if(jagg.getUser() == null) {
        print({
            error:true,
            message:'timeout'
        });
    } else {
         if (request.getMethod() == 'POST' && (action === "design")) {
            mod = jagg.module("composite-api");
            var apiData = {};
            apiData.apiName = request.getParameter("name", "UTF-8");
            apiData.name = request.getParameter("name", "UTF-8");
            //apiData.version = request.getParameter("version");
            if (request.getParameter("provider") == null) {
            	apiData.provider = jagg.getUser().username;
            } else {
            	apiData.provider = request.getParameter("provider")
            }
            var apiId = {
                apiName : request.getParameter("name", "UTF-8"),
                //version : request.getParameter("version"),
                provider: apiData.provider
            };
            apiData.context = request.getParameter("context","UTF-8");
            //apiData.imageUrl = request.getFile("apiThumb");

            //validate uploaded image
            /*if(apiData.imageUrl != null &&!jagg.isValiedImage(apiData.imageUrl)){
                obj = {
                    error:true,
                    message:"Please upload a valid image file for the API icon."
                };
                print(obj);
                return;
            }*/

            //If API not exist create
            result = mod.checkIfResourceExists(apiData);
            if(!result){
                result = mod.createCompositeAPI(apiData);
                if (result.error==true) {
                    obj = {
                        error:true,
                        message:result.message
                    };
                    print(obj);
                    return;
                }
            }

            apiData.description = request.getParameter("description","UTF-8");
            apiData.swagger = request.getParameter("swagger", "UTF-8");

            result = mod.updateCompositeAPIDesign(apiData);
            if (result.error==true) {
                obj = {
                    error:true,
                    message:result.message
                };
            } else {
                obj = {
                    error:false,
                    data :apiId
                }
            }
            print(obj);

        } else if (action === "swagger") {
            mod = jagg.module("composite-api");
            var apiData = {};
            apiData.apiName = request.getParameter("name", "UTF-8");
            apiData.version = request.getParameter("version");
            if (request.getParameter("provider") == null) {
            	apiData.provider = jagg.getUser().username;
            } else {
            	apiData.provider = request.getParameter("provider")
            }
            var data = mod.getSwagger12Resource(apiData);
            print(data.swagger);
        }   else if (request.getMethod() == 'POST' && action === "validateAPIUpdate"){
            mod = jagg.module("composite-api");
            var apiData = {};
            apiData.apiName = request.getParameter("name", "UTF-8");
            apiData.name = request.getParameter("name", "UTF-8");
            apiData.version = request.getParameter("version");
            if (request.getParameter("provider") == null) {
                apiData.provider = jagg.getUser().username;
            } else {
                apiData.provider = request.getParameter("provider")
            }
            var apiId = {
                apiName : request.getParameter("name", "UTF-8"),
                version : request.getParameter("version"),
                provider: apiData.provider
            };

            result = mod.isAPIUpdateValid(apiData);
            if (result.error==true) {
                obj = {
                    error:true,
                    message:result.message,
                    data :result.isValid
                };
            } else {
                obj = {
                    error:false,
                    data :result.isValid
                };
            }
            print(obj);
            return;
        }  else {
            print({
                      error:true,
                      message:msg.error.invalidAction(action)
            });
        }
    }
}());
%>
